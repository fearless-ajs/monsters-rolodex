{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,QAAQC,KAAxC,4BACtB,6BAAKL,EAAMI,QAAQC,OACnB,4BAAIL,EAAMI,QAAQE,aCJbC,EAAW,SAAAP,GAAK,OAErB,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OACxB,cAAC,EAAD,CAAMA,QAAWA,GAAcA,EAAQM,UCLzCC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EACrDG,SAAUF,MCiDCG,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAiBAH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAhB1C,EAAKC,MAAQ,CAEXd,SAAU,GACVW,YAAa,IANH,E,gEAYO,IAAD,OAClBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,+BAOpC,IAAD,EAC6BC,KAAKN,MAA/Bd,EADH,EACGA,SAAUW,EADb,EACaA,YACZU,EAAmBrB,EAASsB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQC,KAAK0B,cAAcC,SAASb,EAAYY,kBAMpD,OACI,sBAAK9B,UAAU,MAAf,UAEI,iDACH,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAce,KAAKf,eAE1D,cAAC,EAAD,CAAUL,SAAUqB,W,GAvCZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd630e02.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img\r\n            alt=\"monsters\" src={`https://robohash.org/${props.monster.name}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from  'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = props =>\r\n    (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => (\r\n               <Card monster = {monster} key={monster.id} />\r\n            ))}\r\n        </div>\r\n    );","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder}\r\n    onChange={handleChange} />\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.components\";\n\nclass App extends Component{\n\n  constructor() {\n    super();\n\n    this.state = {\n\n      monsters: [],\n      searchField: '',\n\n    };\n  }\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({monsters: users}))\n  }\n\n    handleChange = e => {\n        this.setState({ searchField: e.target.value});\n    };\n\n  render() {\n      const { monsters, searchField } = this.state;\n      const filteredMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n      /** Same thing as saying **/\n      // const monsters = this.state.monsters;\n      // const searchField = this.state.searchField;\n\n    return (\n        <div className=\"App\">\n\n            <h1>Monsers Rolodex</h1>\n         <SearchBox placeholder=\"Search monster\" handleChange={this.handleChange} />\n\n          <CardList monsters={filteredMonsters}>\n\n          </CardList>\n\n        </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}